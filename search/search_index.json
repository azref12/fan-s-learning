{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to Fan's Learning A collection of material about HTML, CSS, and others. Aims for self-learning and my portfolio :) Note : All the information I write, I get from several sources. About Writers Click here for more information about_me","title":"Home"},{"location":"#welcome-to-fans-learning","text":"A collection of material about HTML, CSS, and others. Aims for self-learning and my portfolio :) Note : All the information I write, I get from several sources.","title":"Welcome to Fan's Learning"},{"location":"#about-writers","text":"Click here for more information about_me","title":"About Writers"},{"location":"css/css_introduction/","text":"CSS (Cascade Style Sheet) CSS (Cascade Style Sheet) adalah sebuah bahasa untuk mengatur tampilan web sehingga terlihat lebih menarik dan indah. Dengan CSS, kita dapat mengatur layout (tata letak), warna, font, garis, background, animasi, dan lain-lain. Berikut contoh tampilan css : Struktur Dasar CSS Struktur kode CSS terdiri dari tiga bagian, yaitu Selektor, Blok Deklarasi, Properti dan nilainya. Format penulisannya seperti ini: Selektor Selektor adalah kata kunci untuk memilih elemen HTML yang akan kita beri style. Selektor dapat berupa nama tag, class, id, dan atribut. Contohnya : /* Selektor dengan nama tag */ h2 { color: blue } /* Selektor dengan class */ .bg-yellow { background-color: yellow; } /* selektor dengan ID elemen */ #header { background: grey; } /* Selektor dengan Atribut */ input[type=text]{ background: yellow; } Blok Deklarasi Blok deklarasi adalah tempat kita menuliskan atribut atau properti CSS yang akan diberikan ke pada elemen yang telah diseleksi. Blok deklarasi dimulai atau dibuka dengan tanda kurung { lalu ditutup dengan } . Satu blok deklarasi, bisa dipakai oleh lebih dari satu selektor. Contohnya : h1, h2, h3, h4, h5, h6 { color: teal; } Properti dan Nilainya Properti adalah sekumpulan aturan yang akan diberikan kepada elemen yang dipilih. Format penulisan properti seperti ini : properti: \"nilai\"; Setiap properti harus diakhiri dengan titik koma ; . Apabila hanya terdapat satu properti, boleh tidak menggunakan titik koma. Properti harus ditulis di dalam blok deklarasi. Contoh : blockquote { background: pink; } // nilai berupa teks font-family: \"Times new roman\"; // nilai lebih dari satu font-family: \"Times new roman\", Georgia, Roboto; For full explanation visit css_introduction","title":"Introduction"},{"location":"css/css_introduction/#css-cascade-style-sheet","text":"CSS (Cascade Style Sheet) adalah sebuah bahasa untuk mengatur tampilan web sehingga terlihat lebih menarik dan indah. Dengan CSS, kita dapat mengatur layout (tata letak), warna, font, garis, background, animasi, dan lain-lain. Berikut contoh tampilan css :","title":"CSS (Cascade Style Sheet)"},{"location":"css/css_introduction/#struktur-dasar-css","text":"Struktur kode CSS terdiri dari tiga bagian, yaitu Selektor, Blok Deklarasi, Properti dan nilainya. Format penulisannya seperti ini:","title":"Struktur Dasar CSS"},{"location":"css/css_introduction/#selektor","text":"Selektor adalah kata kunci untuk memilih elemen HTML yang akan kita beri style. Selektor dapat berupa nama tag, class, id, dan atribut. Contohnya : /* Selektor dengan nama tag */ h2 { color: blue } /* Selektor dengan class */ .bg-yellow { background-color: yellow; } /* selektor dengan ID elemen */ #header { background: grey; } /* Selektor dengan Atribut */ input[type=text]{ background: yellow; }","title":"Selektor"},{"location":"css/css_introduction/#blok-deklarasi","text":"Blok deklarasi adalah tempat kita menuliskan atribut atau properti CSS yang akan diberikan ke pada elemen yang telah diseleksi. Blok deklarasi dimulai atau dibuka dengan tanda kurung { lalu ditutup dengan } . Satu blok deklarasi, bisa dipakai oleh lebih dari satu selektor. Contohnya : h1, h2, h3, h4, h5, h6 { color: teal; }","title":"Blok Deklarasi"},{"location":"css/css_introduction/#properti-dan-nilainya","text":"Properti adalah sekumpulan aturan yang akan diberikan kepada elemen yang dipilih. Format penulisan properti seperti ini : properti: \"nilai\"; Setiap properti harus diakhiri dengan titik koma ; . Apabila hanya terdapat satu properti, boleh tidak menggunakan titik koma. Properti harus ditulis di dalam blok deklarasi. Contoh : blockquote { background: pink; } // nilai berupa teks font-family: \"Times new roman\"; // nilai lebih dari satu font-family: \"Times new roman\", Georgia, Roboto; For full explanation visit css_introduction","title":"Properti dan Nilainya"},{"location":"framework/introduction/","text":"Framework Framework adalah sebuah kerangka kerja yang digunakan untuk mengembangkan website. Framework ini diciptakan untuk membantu web developer dalam menulis baris kode. Dengan menggunakan framework penulisan kode akan jauh lebih mudah, cepat, dan terstruktur rapi. Fungsi Framework Framework memiliki fungsi utama untuk memudahkan web developer dalam membuat sebuah website. Selain itu, framework juga memiliki fungsi lain. Berikut di antaranya: Membuat kode program menjadi lebih terstruktur Framework biasanya memiliki pola arsitektur dalam menuliskan kode. Sehingga, kode yang dituliskan lebih mudah dan struktur. Dampaknya, kamu dapat dengan cepat menemukan kesalahan dan langsung memperbaikinya. Meningkatkan keamanan Selain membuat kode lebih terstruktur, framework dapat meningkatkan keamanan website kamu. Seperti contohnya framework Laravel yang sudah mengadopsi berbagai sistem keamanan seperti autentikasi, enkripsi, dan hashing. Mempercepat pembuatan website Berikutnya adalah framework ini dapat mempercepat pembuatan website. Hal itu karena pengembang dapat menggunakan komponen-komponen yang sudah disediakan dan tidak perlu menulis kode dari awal, sehingga dapat mempercepat pembuatan sebuah website. Pemeliharaan dan perawatan website lebih mudah Yang terakhir adalah framework ini dapat mempermudah kamu dalam memperbaiki dan merawat website. Perbaikan bug, maintenance menambah fitur dan meningkatkan keamanan website akan jadi lebih mudah karena kebanyakan framework sudah menggunakan pola arsitektur yang beragam. Source by type_of_framework","title":"Introduction"},{"location":"framework/introduction/#framework","text":"Framework adalah sebuah kerangka kerja yang digunakan untuk mengembangkan website. Framework ini diciptakan untuk membantu web developer dalam menulis baris kode. Dengan menggunakan framework penulisan kode akan jauh lebih mudah, cepat, dan terstruktur rapi.","title":"Framework"},{"location":"framework/introduction/#fungsi-framework","text":"Framework memiliki fungsi utama untuk memudahkan web developer dalam membuat sebuah website. Selain itu, framework juga memiliki fungsi lain. Berikut di antaranya: Membuat kode program menjadi lebih terstruktur Framework biasanya memiliki pola arsitektur dalam menuliskan kode. Sehingga, kode yang dituliskan lebih mudah dan struktur. Dampaknya, kamu dapat dengan cepat menemukan kesalahan dan langsung memperbaikinya. Meningkatkan keamanan Selain membuat kode lebih terstruktur, framework dapat meningkatkan keamanan website kamu. Seperti contohnya framework Laravel yang sudah mengadopsi berbagai sistem keamanan seperti autentikasi, enkripsi, dan hashing. Mempercepat pembuatan website Berikutnya adalah framework ini dapat mempercepat pembuatan website. Hal itu karena pengembang dapat menggunakan komponen-komponen yang sudah disediakan dan tidak perlu menulis kode dari awal, sehingga dapat mempercepat pembuatan sebuah website. Pemeliharaan dan perawatan website lebih mudah Yang terakhir adalah framework ini dapat mempermudah kamu dalam memperbaiki dan merawat website. Perbaikan bug, maintenance menambah fitur dan meningkatkan keamanan website akan jadi lebih mudah karena kebanyakan framework sudah menggunakan pola arsitektur yang beragam. Source by type_of_framework","title":"Fungsi Framework"},{"location":"framework/jenis2_framework/","text":"Jenis-jenis Framework Ada beragam jenis framework yang sering digunakan untuk membuat website. Setiap framework memiliki fungsinya masing-masing dan juga menggunakan bahasa pemrograman yang berbeda juga. Nah, berikut ini adalah jenis-jenis framework untuk membuat suatu website. Framework CSS CSS (Cascading Style Sheet) adalah bahasa pemrograman yang digunakan untuk mengatur layout dan tampilan pada HTML agar menjadi lebih menarik. Biasanya CSS ini dibuat oleh front-end developer. Berikut ini adalah beberapa contoh dari framework CSS. Bootstrap. Framework ini memiliki tampilan yang modern, dinamis, dan juga lebih ramah pengguna. Fitur lain dari framework ini adalah website yang dibuat menggunakan bootstrap ini akan responsive jika dibuat dengan mengikuti aturan-aturan yang disediakan bootstrap. Semantic UI. Framework ini memiliki kelebihan dalam penulisan class yang lebih mudah dibandingkan framework lain. Selain itu ia juga menyediakan banyak komponen UI yang berguna untuk membuat tampilan HTML menjadi lebih menarik. Materialize. Framework ini dibuat dengan tujuan untuk mengembangkan desain yang memungkinkan pengguna merasakan pengalaman yang serupa saat menggunakan produk di semua platform. Materialize ini mengadaptasi Material Design yang dibuat dan dikembangkan oleh Google. Framework Javascript JavaScript merupakan bahasa pemrograman yang sering digunakan oleh para front end developer dalam pembuatan tampilan website menjadi lebih interaktif. JavaScript merupakan bahasa pemrograman yang berjalan pada sisi front end dan masuk ke dalam golongan bahasa pemrograman tingkat tinggi. Berikut ini merupakan beberapa framework JavaScript yang sering digunakan. AngularJS. Framework AngularJS ini bersifat open source dan ia berjalan pada sisi client dengan menggunakan konsep MVC untuk membuat tampilan dari website menjadi lebih dinamis. ReactJS. ReactJS adalah framework yang dikembangkan oleh Facebook. Ia sering digunakan untuk membuat UI untuk suatu website atau aplikasi mobile karena ReactJS ini dapat digunakan secara multi platform. ReactJS ini merupakan inti dari React Native yang dapat memungkinkan kamu untuk mengembangkan aplikasi mobile di dua sistem operasi secara bersamaan, yaitu Android dan iOS. Framework PHP PHP (Hypertext Preprocessor) adalah bahasa pemrograman yang digunakan untuk komunikasi dari sisi server. Berikut ini adalah beberapa framework PHP yang populer digunakan dalam pembuatan website. CodeIgniter. CodeIgniter atau dapat disingkat menjadi CI merupakan framework dengan arsitektur yang khas, yaitu arsitektur MVC (Model, View, controller). Dengan begitu kamu dapat menulis kode dengan lebih terstruktur dan spesifik. Laravel. Laravel ini biasanya digunakan oleh para developer untuk mengembangkan website dengan kompleksitas yang tinggi. Ia memiliki library yang lengkap serta memilih sintaksis atau kode yang elegan, ringkas, dan rapi. Symfony. Symfony ini cocok digunakan untuk mengembangkan website dengan skala yang besar dan kompleks. Ia juga memakan sedikit memori jika dibandingkan dengan framework lainnya dan menghasilkan performa yang tinggi. Source by type_of_framework","title":"Types of Frameworks"},{"location":"framework/jenis2_framework/#jenis-jenis-framework","text":"Ada beragam jenis framework yang sering digunakan untuk membuat website. Setiap framework memiliki fungsinya masing-masing dan juga menggunakan bahasa pemrograman yang berbeda juga. Nah, berikut ini adalah jenis-jenis framework untuk membuat suatu website.","title":"Jenis-jenis Framework"},{"location":"framework/jenis2_framework/#framework-css","text":"CSS (Cascading Style Sheet) adalah bahasa pemrograman yang digunakan untuk mengatur layout dan tampilan pada HTML agar menjadi lebih menarik. Biasanya CSS ini dibuat oleh front-end developer. Berikut ini adalah beberapa contoh dari framework CSS. Bootstrap. Framework ini memiliki tampilan yang modern, dinamis, dan juga lebih ramah pengguna. Fitur lain dari framework ini adalah website yang dibuat menggunakan bootstrap ini akan responsive jika dibuat dengan mengikuti aturan-aturan yang disediakan bootstrap. Semantic UI. Framework ini memiliki kelebihan dalam penulisan class yang lebih mudah dibandingkan framework lain. Selain itu ia juga menyediakan banyak komponen UI yang berguna untuk membuat tampilan HTML menjadi lebih menarik. Materialize. Framework ini dibuat dengan tujuan untuk mengembangkan desain yang memungkinkan pengguna merasakan pengalaman yang serupa saat menggunakan produk di semua platform. Materialize ini mengadaptasi Material Design yang dibuat dan dikembangkan oleh Google.","title":"Framework CSS"},{"location":"framework/jenis2_framework/#framework-javascript","text":"JavaScript merupakan bahasa pemrograman yang sering digunakan oleh para front end developer dalam pembuatan tampilan website menjadi lebih interaktif. JavaScript merupakan bahasa pemrograman yang berjalan pada sisi front end dan masuk ke dalam golongan bahasa pemrograman tingkat tinggi. Berikut ini merupakan beberapa framework JavaScript yang sering digunakan. AngularJS. Framework AngularJS ini bersifat open source dan ia berjalan pada sisi client dengan menggunakan konsep MVC untuk membuat tampilan dari website menjadi lebih dinamis. ReactJS. ReactJS adalah framework yang dikembangkan oleh Facebook. Ia sering digunakan untuk membuat UI untuk suatu website atau aplikasi mobile karena ReactJS ini dapat digunakan secara multi platform. ReactJS ini merupakan inti dari React Native yang dapat memungkinkan kamu untuk mengembangkan aplikasi mobile di dua sistem operasi secara bersamaan, yaitu Android dan iOS.","title":"Framework Javascript"},{"location":"framework/jenis2_framework/#framework-php","text":"PHP (Hypertext Preprocessor) adalah bahasa pemrograman yang digunakan untuk komunikasi dari sisi server. Berikut ini adalah beberapa framework PHP yang populer digunakan dalam pembuatan website. CodeIgniter. CodeIgniter atau dapat disingkat menjadi CI merupakan framework dengan arsitektur yang khas, yaitu arsitektur MVC (Model, View, controller). Dengan begitu kamu dapat menulis kode dengan lebih terstruktur dan spesifik. Laravel. Laravel ini biasanya digunakan oleh para developer untuk mengembangkan website dengan kompleksitas yang tinggi. Ia memiliki library yang lengkap serta memilih sintaksis atau kode yang elegan, ringkas, dan rapi. Symfony. Symfony ini cocok digunakan untuk mengembangkan website dengan skala yang besar dan kompleks. Ia juga memakan sedikit memori jika dibandingkan dengan framework lainnya dan menghasilkan performa yang tinggi. Source by type_of_framework","title":"Framework PHP"},{"location":"html/html_introduction/","text":"HTML (Hypertext Markup Language) Contoh format dasar html code : <!DOCTYPE html> <html> <head> <title> Belajar HTML Dasar </title> </head> <body> <p> Hello World </p> </body> <html> Struktur Dasar HTML Deklarasi <!DOCTYPE html> yang menandakan bahwa HTML yang digunakan adalah versi 5. Tag <html> wajib ada dalam setiap dokumen HTML. Tanpa tag tersebut, file HTML tidak bisa di compile dan output nya tidak akan tampil di browser. dan Tag <html> ditutup dengan </html> . Head Head adalah kepala dari file HTML. Tag <head> dan diakhiri dengan tag </head> . Tag <title> untuk memberikan judul pada file HTML. Body Struktur <body> yang menjadi inti dari dokumen HTML. Berikut bagian-bagian yang biasanya terdapat dibagian <body> : Tag Tag merupakan penanda untuk awalan dan akhiran dari elemen HTML. Tag dibuat menggunakan kurung siku <>, di dalam kurung tersebut berisi nama tag. Beberapa tag juga memiliki atribut. Contoh tag yang sering dipakai antara lain <head> , <body> , <p> , dan masih banyak lagi. Elemen Elemen merupakan komponen penyusun. Elemen tersusun atas tag pembuka, isi dan penutup. Dalam beberapa kasus juga sering ditambahkan atribut. Contoh elemen <p align=\u201dcenter\u201d>Halo Dunia!<p> . Contoh di atas adalah satu elemen <p> yang memiliki atribut align=\u201dcenter\u201d. Sementara isinya berupa teks, yaitu Halo Dunia! Atribut Atribut merupakan kata khusus yang ditempatkan di dalam tag pembuka. Istilah lain untuk menyebut atribut adalah modifier karena fungsi mengubah perilaku elemen. Pada contoh di atas, atribut yang digunakan adalah align=\u201dcenter\u201d . Fungsinya yaitu mengubah agar tulisan Halo Dunia! ada di bagian tengah layar. For full explanation visit html_introduction_1 Kenapa HTML Itu Penting? Menguasai HTML secara fundamental sangatlah penting jika Anda ingin menjadi: Front End Developer: Sebagai seorang Front End Developer, Anda bertanggung jawab untuk merancang dan mengembangkan tampilan dan antarmuka pengguna pada sebuah situs web. HTML adalah bahasa dasar yang digunakan untuk membuat struktur dasar dari halaman web, termasuk teks, gambar, tautan, dan elemen-elemen lainnya. Memahami HTML dengan baik adalah kunci untuk menciptakan pengalaman pengguna yang baik. Web Developer: Sebagai seorang Web Developer, Anda perlu menguasai HTML untuk membangun seluruh situs web. Ini mencakup merancang halaman-halaman web, mengorganisasi konten, dan memastikan bahwa semua elemen bekerja dengan baik. HTML adalah fondasi dari semua situs web, dan pengetahuan yang kuat tentang bahasa ini akan membantu Anda menjadi seorang pengembang web yang kompeten. Full Stack Developer: Sebagai seorang Full Stack Developer, Anda bertanggung jawab atas pengembangan baik di sisi depan (Front End) maupun di sisi belakang (Back End) situs web. Meskipun pekerjaan Back End Developer lebih fokus pada server, basis data, dan logika bisnis, pemahaman HTML masih penting. Ini karena Anda perlu berinteraksi dengan Front End dalam beberapa kasus dan memahami cara data ditampilkan di halaman web. Source By html_introduction_2 Bahasa yang harus dikuasai Selain HTML, ada beberapa teknologi dan bahasa pemrograman lain yang sangat penting untuk dipelajari jika Anda ingin menjadi seorang pengembang web yang sukses. Berikut adalah beberapa di antaranya: CSS (Cascading Style Sheets): CSS digunakan untuk mengatur tampilan dan tata letak halaman web. Dengan CSS, Anda dapat mengendalikan warna, font, margin, padding, dan aspek visual lainnya dari elemen-elemen HTML. Ini adalah keterampilan kunci untuk Front End Development. JavaScript : JavaScript adalah bahasa pemrograman yang digunakan untuk menambahkan interaktivitas ke halaman web. Dengan JavaScript, Anda dapat membuat efek animasi, validasi formulir, dan bahkan membangun aplikasi web yang lebih kompleks. Ini adalah salah satu aspek utama dari Front End Development. Back-End Programming Languages : Jika Anda ingin menjadi Full Stack Developer, Anda perlu memahami bahasa pemrograman Back End seperti Python, Ruby, PHP, Node.js, atau Java. Bahasa ini digunakan untuk mengembangkan logika server, mengelola basis data, dan mengatur komunikasi dengan Front End. Basis Data : Pengetahuan tentang basis data sangat penting. Anda perlu memahami cara merancang dan mengelola basis data untuk menyimpan dan mengakses informasi di situs web Anda. Beberapa contoh teknologi basis data yang umum digunakan adalah MySQL, PostgreSQL, MongoDB, dan SQLite. Framework dan Library : Banyak pengembang web menggunakan framework dan library untuk mempercepat pengembangan. Contohnya, untuk Front End, Anda bisa mempelajari React, Angular, atau Vue.js. Di sisi Back End, ada banyak framework seperti Express.js (Node.js), Ruby on Rails, Django (Python), dan Laravel (PHP). HTTP/HTTPS dan Protokol Web : Memahami cara web berfungsi dan bagaimana HTTP/HTTPS berinteraksi dengan situs web adalah penting. Anda perlu tahu tentang metode HTTP, status kode, dan aspek keamanan di web. Version Control (Contohnya, Git) : Pengetahuan tentang sistem kontrol versi seperti Git sangat berguna. Ini memungkinkan Anda untuk mengelola kode Anda, berkolaborasi dengan tim, dan mengikuti perubahan. Keamanan Web : Memahami praktik keamanan web seperti perlindungan terhadap serangan XSS, SQL injection, dan praktik keamanan lainnya sangat penting untuk menjaga situs web Anda aman. Server dan Hosting : Anda perlu memahami cara meng-host situs web Anda, konfigurasi server, manajemen DNS, dan aspek hosting lainnya. Pemahaman tentang Peramban Web : Memahami cara berbagai peramban web berperilaku dan bagaimana memastikan situs Anda kompatibel dengan berbagai peramban adalah keterampilan yang berguna. Prinsip Desain Responsif : Memahami cara merancang situs web yang responsif untuk berbagai perangkat dan layar adalah penting dalam dunia web yang semakin beragam. Pengoptimalan Kinerja dan SEO : Belajar cara mengoptimalkan situs web Anda untuk kinerja yang baik dan praktik SEO akan membantu situs Anda mendapatkan lalu lintas dan berkinerja baik di mesin pencari. Source By html_introduction_3","title":"Introduction"},{"location":"html/html_introduction/#html-hypertext-markup-language","text":"Contoh format dasar html code : <!DOCTYPE html> <html> <head> <title> Belajar HTML Dasar </title> </head> <body> <p> Hello World </p> </body> <html>","title":"HTML (Hypertext Markup Language)"},{"location":"html/html_introduction/#struktur-dasar-html","text":"","title":"Struktur Dasar HTML"},{"location":"html/html_introduction/#deklarasi","text":"<!DOCTYPE html> yang menandakan bahwa HTML yang digunakan adalah versi 5. Tag <html> wajib ada dalam setiap dokumen HTML. Tanpa tag tersebut, file HTML tidak bisa di compile dan output nya tidak akan tampil di browser. dan Tag <html> ditutup dengan </html> .","title":"Deklarasi"},{"location":"html/html_introduction/#head","text":"Head adalah kepala dari file HTML. Tag <head> dan diakhiri dengan tag </head> . Tag <title> untuk memberikan judul pada file HTML.","title":"Head"},{"location":"html/html_introduction/#body","text":"Struktur <body> yang menjadi inti dari dokumen HTML. Berikut bagian-bagian yang biasanya terdapat dibagian <body> :","title":"Body"},{"location":"html/html_introduction/#tag","text":"Tag merupakan penanda untuk awalan dan akhiran dari elemen HTML. Tag dibuat menggunakan kurung siku <>, di dalam kurung tersebut berisi nama tag. Beberapa tag juga memiliki atribut. Contoh tag yang sering dipakai antara lain <head> , <body> , <p> , dan masih banyak lagi.","title":"Tag"},{"location":"html/html_introduction/#elemen","text":"Elemen merupakan komponen penyusun. Elemen tersusun atas tag pembuka, isi dan penutup. Dalam beberapa kasus juga sering ditambahkan atribut. Contoh elemen <p align=\u201dcenter\u201d>Halo Dunia!<p> . Contoh di atas adalah satu elemen <p> yang memiliki atribut align=\u201dcenter\u201d. Sementara isinya berupa teks, yaitu Halo Dunia!","title":"Elemen"},{"location":"html/html_introduction/#atribut","text":"Atribut merupakan kata khusus yang ditempatkan di dalam tag pembuka. Istilah lain untuk menyebut atribut adalah modifier karena fungsi mengubah perilaku elemen. Pada contoh di atas, atribut yang digunakan adalah align=\u201dcenter\u201d . Fungsinya yaitu mengubah agar tulisan Halo Dunia! ada di bagian tengah layar. For full explanation visit html_introduction_1","title":"Atribut"},{"location":"html/html_introduction/#kenapa-html-itu-penting","text":"Menguasai HTML secara fundamental sangatlah penting jika Anda ingin menjadi: Front End Developer: Sebagai seorang Front End Developer, Anda bertanggung jawab untuk merancang dan mengembangkan tampilan dan antarmuka pengguna pada sebuah situs web. HTML adalah bahasa dasar yang digunakan untuk membuat struktur dasar dari halaman web, termasuk teks, gambar, tautan, dan elemen-elemen lainnya. Memahami HTML dengan baik adalah kunci untuk menciptakan pengalaman pengguna yang baik. Web Developer: Sebagai seorang Web Developer, Anda perlu menguasai HTML untuk membangun seluruh situs web. Ini mencakup merancang halaman-halaman web, mengorganisasi konten, dan memastikan bahwa semua elemen bekerja dengan baik. HTML adalah fondasi dari semua situs web, dan pengetahuan yang kuat tentang bahasa ini akan membantu Anda menjadi seorang pengembang web yang kompeten. Full Stack Developer: Sebagai seorang Full Stack Developer, Anda bertanggung jawab atas pengembangan baik di sisi depan (Front End) maupun di sisi belakang (Back End) situs web. Meskipun pekerjaan Back End Developer lebih fokus pada server, basis data, dan logika bisnis, pemahaman HTML masih penting. Ini karena Anda perlu berinteraksi dengan Front End dalam beberapa kasus dan memahami cara data ditampilkan di halaman web. Source By html_introduction_2","title":"Kenapa HTML Itu Penting?"},{"location":"html/html_introduction/#bahasa-yang-harus-dikuasai","text":"Selain HTML, ada beberapa teknologi dan bahasa pemrograman lain yang sangat penting untuk dipelajari jika Anda ingin menjadi seorang pengembang web yang sukses. Berikut adalah beberapa di antaranya: CSS (Cascading Style Sheets): CSS digunakan untuk mengatur tampilan dan tata letak halaman web. Dengan CSS, Anda dapat mengendalikan warna, font, margin, padding, dan aspek visual lainnya dari elemen-elemen HTML. Ini adalah keterampilan kunci untuk Front End Development. JavaScript : JavaScript adalah bahasa pemrograman yang digunakan untuk menambahkan interaktivitas ke halaman web. Dengan JavaScript, Anda dapat membuat efek animasi, validasi formulir, dan bahkan membangun aplikasi web yang lebih kompleks. Ini adalah salah satu aspek utama dari Front End Development. Back-End Programming Languages : Jika Anda ingin menjadi Full Stack Developer, Anda perlu memahami bahasa pemrograman Back End seperti Python, Ruby, PHP, Node.js, atau Java. Bahasa ini digunakan untuk mengembangkan logika server, mengelola basis data, dan mengatur komunikasi dengan Front End. Basis Data : Pengetahuan tentang basis data sangat penting. Anda perlu memahami cara merancang dan mengelola basis data untuk menyimpan dan mengakses informasi di situs web Anda. Beberapa contoh teknologi basis data yang umum digunakan adalah MySQL, PostgreSQL, MongoDB, dan SQLite. Framework dan Library : Banyak pengembang web menggunakan framework dan library untuk mempercepat pengembangan. Contohnya, untuk Front End, Anda bisa mempelajari React, Angular, atau Vue.js. Di sisi Back End, ada banyak framework seperti Express.js (Node.js), Ruby on Rails, Django (Python), dan Laravel (PHP). HTTP/HTTPS dan Protokol Web : Memahami cara web berfungsi dan bagaimana HTTP/HTTPS berinteraksi dengan situs web adalah penting. Anda perlu tahu tentang metode HTTP, status kode, dan aspek keamanan di web. Version Control (Contohnya, Git) : Pengetahuan tentang sistem kontrol versi seperti Git sangat berguna. Ini memungkinkan Anda untuk mengelola kode Anda, berkolaborasi dengan tim, dan mengikuti perubahan. Keamanan Web : Memahami praktik keamanan web seperti perlindungan terhadap serangan XSS, SQL injection, dan praktik keamanan lainnya sangat penting untuk menjaga situs web Anda aman. Server dan Hosting : Anda perlu memahami cara meng-host situs web Anda, konfigurasi server, manajemen DNS, dan aspek hosting lainnya. Pemahaman tentang Peramban Web : Memahami cara berbagai peramban web berperilaku dan bagaimana memastikan situs Anda kompatibel dengan berbagai peramban adalah keterampilan yang berguna. Prinsip Desain Responsif : Memahami cara merancang situs web yang responsif untuk berbagai perangkat dan layar adalah penting dalam dunia web yang semakin beragam. Pengoptimalan Kinerja dan SEO : Belajar cara mengoptimalkan situs web Anda untuk kinerja yang baik dan praktik SEO akan membantu situs Anda mendapatkan lalu lintas dan berkinerja baik di mesin pencari. Source By html_introduction_3","title":"Bahasa yang harus dikuasai"},{"location":"html/html_structure/","text":"Berikut tag yang biasa digunakan pada html : Tag Dasar HTML yang Termasuk ke dalam Fundamental No Nama Tag Fungsi 1 <!DOCTYPE html> Deklarasi untuk mendefinisikan dokumen menjadi HTML 2 <html> Tag pembuka untuk membuat dokumen HTML 3 <head> Informasi meta tentang dokumen 4 <title> Membuat judul halaman yang nantinya akan ditampilkan di browser 5 <body> Tempat dibuatnya semua konten website menggunakan HTML Tag HTML Membuat Judul No Nama Tag Fungsi 1 <h1> s/d <h6> Deklarasi untuk mendefinisikan dokumen menjadi HTML 2 <hr> Memisahkan konten (biasanya ditampilkan garis pembatas) Tag HTML untuk Membuat Paragraf No Nama Tag Fungsi 1 <p> Membuat paragraf 2 br> Membuat garis baru 3 <pre> Memformat teks atau kalimat Tag Style No Nama Tag Fungsi 1 style Atribut untuk elemen styling pada HTML 2 background-color Memberikan warna latar belakang 3 color Memberi warna pada teks 4 font-family Mengubah font pada teks 5 font-size Mengatur ukuran font 6 text-align Mengatur perataan teks Tag Formating No Nama Tag Fungsi 1 <b> Membuat teks tebal 2 <strong> Membuat teks penting 3 <i> Membuat teks miring 4 <em> Membuat teks ditekankan 5 <mark> Membuat teks ditandai 6 <small> Membuat teks kecil 7 <del> Teks dihapus 8 <ins> Teks dimasukan 9 <sub> Teks subscript 10 <sup> Teks superscript Tag Gambar No Nama Tag Fungsi 1 <img> Elemen untuk mendefinisikan gambar 2 src Atribut untuk menentukan URL gambar 3 alt Mendefinisikan teks pada gambar, jika gambar tidak dapat ditampilkan 4 width \u2013 height Menentukan ukuran gambar 5 float Properti untuk float image pada CSS 6 <map> Mendefinisikan gambar peta 7 <area> Mendefinisikan area atau daerah-daerah gambar pada peta 8 <picture> Menampilkan gambar yang berbeda untuk perangkat yang berbeda Tag Form No Nama Tag Fungsi 1 <form> Membuat formulir untuk mengumpulkan input pengguna 2 <input> Membuat tipe inputan pada form yang akan dibuat 3 <textare> Elemen untuk mendefinisikan field input 4 <label> Memberikan label pada elemen input 5 <fieldset> Mengelompokan elemen yang terdapat pada sebuah form 6 <select> Membuat input dengan pilihan yang berbentuk list drop down 7 <optgroup> Mengelompokan beberapa pilihan pada daftar pilihan input 8 <option> Mendefinisikan opsi yang bisa dipilih 9 <button> Membuat Button 10 <datalist> Membuat daftar pilihan untuk input data 11 <output> Menampilkan hasil dari hitungan Tag Tabel No Nama Tag Fungsi 1 <table> Membuat tabel pada web 2 <tr> Membuat baris pada tabel 3 <td> Membuat kolom pada tabel 4 <th> Membuat judul pada kolom. Contohnya nama, kelas, dan alamat. 5 <caption> Membuat judul tabel 6 border Mengatur garis tabel 7 border-collapse Mengatur batas garis tabel 8 padding Mengatur padding pada cell 9 text-align Mengatur perataan pada konten tabel 10 border-spacing Mengatur jarak spasi garis tabel 11 colspan Menggabungkan beberapa kolom. Kalau di office disebutnya Merge Cell 12 rowspan Menggabungkan beberapa baris 13 id Memberikan id pada tabel atau kolom Tag Daftar / List No Nama Tag Fungsi 1 <ul> Untuk membuat tampilan daftar menggunakan simbol seperti bullet, cyrcle, dan lainnya. 2 <ol> Membuat daftar menggunakan nomor, huruf, romawi, dan lainnya 3 <li> Menentukan berbagai item yang ingin ditampilkan 4 <dl> Mendefinisikan daftar deskripsi 5 <dt> Mendefinisikan istilah deskripsi 6 <dd> Menggambarkan istilah dalam daftar deskripsi 7 <type> Menentukan jenis penomoran For full explanation visit html_structure_1","title":"Tags in HTML"},{"location":"html/html_structure/#tag-dasar-html-yang-termasuk-ke-dalam-fundamental","text":"No Nama Tag Fungsi 1 <!DOCTYPE html> Deklarasi untuk mendefinisikan dokumen menjadi HTML 2 <html> Tag pembuka untuk membuat dokumen HTML 3 <head> Informasi meta tentang dokumen 4 <title> Membuat judul halaman yang nantinya akan ditampilkan di browser 5 <body> Tempat dibuatnya semua konten website menggunakan HTML","title":"Tag Dasar HTML yang Termasuk ke dalam Fundamental"},{"location":"html/html_structure/#tag-html-membuat-judul","text":"No Nama Tag Fungsi 1 <h1> s/d <h6> Deklarasi untuk mendefinisikan dokumen menjadi HTML 2 <hr> Memisahkan konten (biasanya ditampilkan garis pembatas)","title":"Tag HTML Membuat Judul"},{"location":"html/html_structure/#tag-html-untuk-membuat-paragraf","text":"No Nama Tag Fungsi 1 <p> Membuat paragraf 2 br> Membuat garis baru 3 <pre> Memformat teks atau kalimat","title":"Tag HTML untuk Membuat Paragraf"},{"location":"html/html_structure/#tag-style","text":"No Nama Tag Fungsi 1 style Atribut untuk elemen styling pada HTML 2 background-color Memberikan warna latar belakang 3 color Memberi warna pada teks 4 font-family Mengubah font pada teks 5 font-size Mengatur ukuran font 6 text-align Mengatur perataan teks","title":"Tag Style"},{"location":"html/html_structure/#tag-formating","text":"No Nama Tag Fungsi 1 <b> Membuat teks tebal 2 <strong> Membuat teks penting 3 <i> Membuat teks miring 4 <em> Membuat teks ditekankan 5 <mark> Membuat teks ditandai 6 <small> Membuat teks kecil 7 <del> Teks dihapus 8 <ins> Teks dimasukan 9 <sub> Teks subscript 10 <sup> Teks superscript","title":"Tag Formating"},{"location":"html/html_structure/#tag-gambar","text":"No Nama Tag Fungsi 1 <img> Elemen untuk mendefinisikan gambar 2 src Atribut untuk menentukan URL gambar 3 alt Mendefinisikan teks pada gambar, jika gambar tidak dapat ditampilkan 4 width \u2013 height Menentukan ukuran gambar 5 float Properti untuk float image pada CSS 6 <map> Mendefinisikan gambar peta 7 <area> Mendefinisikan area atau daerah-daerah gambar pada peta 8 <picture> Menampilkan gambar yang berbeda untuk perangkat yang berbeda","title":"Tag Gambar"},{"location":"html/html_structure/#tag-form","text":"No Nama Tag Fungsi 1 <form> Membuat formulir untuk mengumpulkan input pengguna 2 <input> Membuat tipe inputan pada form yang akan dibuat 3 <textare> Elemen untuk mendefinisikan field input 4 <label> Memberikan label pada elemen input 5 <fieldset> Mengelompokan elemen yang terdapat pada sebuah form 6 <select> Membuat input dengan pilihan yang berbentuk list drop down 7 <optgroup> Mengelompokan beberapa pilihan pada daftar pilihan input 8 <option> Mendefinisikan opsi yang bisa dipilih 9 <button> Membuat Button 10 <datalist> Membuat daftar pilihan untuk input data 11 <output> Menampilkan hasil dari hitungan","title":"Tag Form"},{"location":"html/html_structure/#tag-tabel","text":"No Nama Tag Fungsi 1 <table> Membuat tabel pada web 2 <tr> Membuat baris pada tabel 3 <td> Membuat kolom pada tabel 4 <th> Membuat judul pada kolom. Contohnya nama, kelas, dan alamat. 5 <caption> Membuat judul tabel 6 border Mengatur garis tabel 7 border-collapse Mengatur batas garis tabel 8 padding Mengatur padding pada cell 9 text-align Mengatur perataan pada konten tabel 10 border-spacing Mengatur jarak spasi garis tabel 11 colspan Menggabungkan beberapa kolom. Kalau di office disebutnya Merge Cell 12 rowspan Menggabungkan beberapa baris 13 id Memberikan id pada tabel atau kolom","title":"Tag Tabel"},{"location":"html/html_structure/#tag-daftar-list","text":"No Nama Tag Fungsi 1 <ul> Untuk membuat tampilan daftar menggunakan simbol seperti bullet, cyrcle, dan lainnya. 2 <ol> Membuat daftar menggunakan nomor, huruf, romawi, dan lainnya 3 <li> Menentukan berbagai item yang ingin ditampilkan 4 <dl> Mendefinisikan daftar deskripsi 5 <dt> Mendefinisikan istilah deskripsi 6 <dd> Menggambarkan istilah dalam daftar deskripsi 7 <type> Menentukan jenis penomoran For full explanation visit html_structure_1","title":"Tag Daftar / List"}]}