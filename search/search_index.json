{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to Fan's Learning A collection of material about HTML, CSS, and others. Aims for self-learning and my portfolio :) Note : All the information I write, I get from several sources. About Writers Click here for more information about_me","title":"Home"},{"location":"#welcome-to-fans-learning","text":"A collection of material about HTML, CSS, and others. Aims for self-learning and my portfolio :) Note : All the information I write, I get from several sources.","title":"Welcome to Fan's Learning"},{"location":"#about-writers","text":"Click here for more information about_me","title":"About Writers"},{"location":"css/css_introduction/","text":"CSS (Cascade Style Sheet) CSS (Cascade Style Sheet) adalah sebuah bahasa untuk mengatur tampilan web sehingga terlihat lebih menarik dan indah. Dengan CSS, kita dapat mengatur layout (tata letak), warna, font, garis, background, animasi, dan lain-lain. Berikut contoh tampilan css : Struktur Dasar CSS Struktur kode CSS terdiri dari tiga bagian, yaitu Selektor, Blok Deklarasi, Properti dan nilainya. Format penulisannya seperti ini: Selektor Selektor adalah kata kunci untuk memilih elemen HTML yang akan kita beri style. Selektor dapat berupa nama tag, class, id, dan atribut. Contohnya : /* Selektor dengan nama tag */ h2 { color: blue } /* Selektor dengan class */ .bg-yellow { background-color: yellow; } /* selektor dengan ID elemen */ #header { background: grey; } /* Selektor dengan Atribut */ input[type=text]{ background: yellow; } Blok Deklarasi Blok deklarasi adalah tempat kita menuliskan atribut atau properti CSS yang akan diberikan ke pada elemen yang telah diseleksi. Blok deklarasi dimulai atau dibuka dengan tanda kurung { lalu ditutup dengan } . Satu blok deklarasi, bisa dipakai oleh lebih dari satu selektor. Contohnya : h1, h2, h3, h4, h5, h6 { color: teal; } Properti dan Nilainya Properti adalah sekumpulan aturan yang akan diberikan kepada elemen yang dipilih. Format penulisan properti seperti ini : properti: \"nilai\"; Setiap properti harus diakhiri dengan titik koma ; . Apabila hanya terdapat satu properti, boleh tidak menggunakan titik koma. Properti harus ditulis di dalam blok deklarasi. Contoh : blockquote { background: pink; } // nilai berupa teks font-family: \"Times new roman\"; // nilai lebih dari satu font-family: \"Times new roman\", Georgia, Roboto; For full explanation visit css_introduction","title":"Introduction"},{"location":"css/css_introduction/#css-cascade-style-sheet","text":"CSS (Cascade Style Sheet) adalah sebuah bahasa untuk mengatur tampilan web sehingga terlihat lebih menarik dan indah. Dengan CSS, kita dapat mengatur layout (tata letak), warna, font, garis, background, animasi, dan lain-lain. Berikut contoh tampilan css :","title":"CSS (Cascade Style Sheet)"},{"location":"css/css_introduction/#struktur-dasar-css","text":"Struktur kode CSS terdiri dari tiga bagian, yaitu Selektor, Blok Deklarasi, Properti dan nilainya. Format penulisannya seperti ini:","title":"Struktur Dasar CSS"},{"location":"css/css_introduction/#selektor","text":"Selektor adalah kata kunci untuk memilih elemen HTML yang akan kita beri style. Selektor dapat berupa nama tag, class, id, dan atribut. Contohnya : /* Selektor dengan nama tag */ h2 { color: blue } /* Selektor dengan class */ .bg-yellow { background-color: yellow; } /* selektor dengan ID elemen */ #header { background: grey; } /* Selektor dengan Atribut */ input[type=text]{ background: yellow; }","title":"Selektor"},{"location":"css/css_introduction/#blok-deklarasi","text":"Blok deklarasi adalah tempat kita menuliskan atribut atau properti CSS yang akan diberikan ke pada elemen yang telah diseleksi. Blok deklarasi dimulai atau dibuka dengan tanda kurung { lalu ditutup dengan } . Satu blok deklarasi, bisa dipakai oleh lebih dari satu selektor. Contohnya : h1, h2, h3, h4, h5, h6 { color: teal; }","title":"Blok Deklarasi"},{"location":"css/css_introduction/#properti-dan-nilainya","text":"Properti adalah sekumpulan aturan yang akan diberikan kepada elemen yang dipilih. Format penulisan properti seperti ini : properti: \"nilai\"; Setiap properti harus diakhiri dengan titik koma ; . Apabila hanya terdapat satu properti, boleh tidak menggunakan titik koma. Properti harus ditulis di dalam blok deklarasi. Contoh : blockquote { background: pink; } // nilai berupa teks font-family: \"Times new roman\"; // nilai lebih dari satu font-family: \"Times new roman\", Georgia, Roboto; For full explanation visit css_introduction","title":"Properti dan Nilainya"},{"location":"framework/introduction/","text":"Framework Framework adalah sebuah kerangka kerja yang digunakan untuk mengembangkan website. Framework ini diciptakan untuk membantu web developer dalam menulis baris kode. Dengan menggunakan framework penulisan kode akan jauh lebih mudah, cepat, dan terstruktur rapi. Fungsi Framework Framework memiliki fungsi utama untuk memudahkan web developer dalam membuat sebuah website. Selain itu, framework juga memiliki fungsi lain. Berikut di antaranya: Membuat kode program menjadi lebih terstruktur Framework biasanya memiliki pola arsitektur dalam menuliskan kode. Sehingga, kode yang dituliskan lebih mudah dan struktur. Dampaknya, kamu dapat dengan cepat menemukan kesalahan dan langsung memperbaikinya. Meningkatkan keamanan Selain membuat kode lebih terstruktur, framework dapat meningkatkan keamanan website kamu. Seperti contohnya framework Laravel yang sudah mengadopsi berbagai sistem keamanan seperti autentikasi, enkripsi, dan hashing. Mempercepat pembuatan website Berikutnya adalah framework ini dapat mempercepat pembuatan website. Hal itu karena pengembang dapat menggunakan komponen-komponen yang sudah disediakan dan tidak perlu menulis kode dari awal, sehingga dapat mempercepat pembuatan sebuah website. Pemeliharaan dan perawatan website lebih mudah Yang terakhir adalah framework ini dapat mempermudah kamu dalam memperbaiki dan merawat website. Perbaikan bug, maintenance menambah fitur dan meningkatkan keamanan website akan jadi lebih mudah karena kebanyakan framework sudah menggunakan pola arsitektur yang beragam. Source by type_of_framework Tips Menentukan Framework CSS yang Tepat Sesuaikan dengan Konsep Desain Website atau Aplikasi Berikut ini adalah rekomendasi framework CSS berdasarkan masing-masing jenis website atau aplikasi Anda. Jenis Website / Aplikasi Framework CSS Website / aplikasi yang minimalis UIKit, Milligram PureCSS Website / aplikasi untuk enterprise Bulma, Bootstrap,Foundation HTML email Foundation Tentukan Bahasa Pemrograman Framework Anda juga harus tahu bahasa pemrograman apa yang ingin Anda pakai saat menggunakan CSS framework. Sesuai penjelasan kami tadi, ada beberapa framework yang hanya menggunakan bahasa pemrograman standar seperti HTML. Di sisi lain, ada juga framework yang memakai bahasa pemrograman lebih kompleks seperti CSS dan JavaScripts. Tak jarang juga beberapa di antaranya memiliki dukungan SASS dan LESS untuk menyatukan setiap elemen UI. Intinya, sesuaikan dengan skill bahasa pemrograman Anda. Jika tidak, yang ada Anda akan kesusahan untuk menggunakan framework itu sendiri. Pilih CSS Framework yang Menyediakan Berbagai Fitur Dari sekian fitur yang ditawarkan pada masing-masing framework, setidaknya pastikan framework tersebut memiliki fitur-fitur sebagai berikut: Desain yang responsif. Ini penting, karena ini akan menyangkut pada kenyamanan user saat mengunjungi website / aplikasi Anda. Mobile friendly. Pilih framework yang mampu menghasilkan kualitas website / aplikasi optimal di perangkat apa pun, khususnya mobile. Browser support. Gunakan framework yang bekerja secara responsif di segala browser. Pastikan Framework CSS Bisa Dikustomisasi Meskipun framework CSS fungsinya adalah untuk menghindari pembuatan kode dari nol, bukan berarti kode tersebut tidak bisa diubah atau dikustomisasi. Framework yang bisa dikustomisasi akan memberikan Anda ruang untuk berkreasi. Minimal, Anda bisa memiliki front-end yang sesuai dengan karakter brand Anda. Atau menghindari tampilan yang serupa dengan milik pengguna lain. Akan tetapi, jangan juga memilih framework yang mengharuskan Anda untuk melakukan banyak kustomisasi. Itu akan sama saja seperti Anda belajar coding dari awal. Source by tips_for_determining_a_framework","title":"Introduction"},{"location":"framework/introduction/#framework","text":"Framework adalah sebuah kerangka kerja yang digunakan untuk mengembangkan website. Framework ini diciptakan untuk membantu web developer dalam menulis baris kode. Dengan menggunakan framework penulisan kode akan jauh lebih mudah, cepat, dan terstruktur rapi.","title":"Framework"},{"location":"framework/introduction/#fungsi-framework","text":"Framework memiliki fungsi utama untuk memudahkan web developer dalam membuat sebuah website. Selain itu, framework juga memiliki fungsi lain. Berikut di antaranya: Membuat kode program menjadi lebih terstruktur Framework biasanya memiliki pola arsitektur dalam menuliskan kode. Sehingga, kode yang dituliskan lebih mudah dan struktur. Dampaknya, kamu dapat dengan cepat menemukan kesalahan dan langsung memperbaikinya. Meningkatkan keamanan Selain membuat kode lebih terstruktur, framework dapat meningkatkan keamanan website kamu. Seperti contohnya framework Laravel yang sudah mengadopsi berbagai sistem keamanan seperti autentikasi, enkripsi, dan hashing. Mempercepat pembuatan website Berikutnya adalah framework ini dapat mempercepat pembuatan website. Hal itu karena pengembang dapat menggunakan komponen-komponen yang sudah disediakan dan tidak perlu menulis kode dari awal, sehingga dapat mempercepat pembuatan sebuah website. Pemeliharaan dan perawatan website lebih mudah Yang terakhir adalah framework ini dapat mempermudah kamu dalam memperbaiki dan merawat website. Perbaikan bug, maintenance menambah fitur dan meningkatkan keamanan website akan jadi lebih mudah karena kebanyakan framework sudah menggunakan pola arsitektur yang beragam. Source by type_of_framework","title":"Fungsi Framework"},{"location":"framework/introduction/#tips-menentukan-framework-css-yang-tepat","text":"","title":"Tips Menentukan Framework CSS yang Tepat"},{"location":"framework/introduction/#sesuaikan-dengan-konsep-desain-website-atau-aplikasi","text":"Berikut ini adalah rekomendasi framework CSS berdasarkan masing-masing jenis website atau aplikasi Anda. Jenis Website / Aplikasi Framework CSS Website / aplikasi yang minimalis UIKit, Milligram PureCSS Website / aplikasi untuk enterprise Bulma, Bootstrap,Foundation HTML email Foundation","title":"Sesuaikan dengan Konsep Desain Website atau Aplikasi"},{"location":"framework/introduction/#tentukan-bahasa-pemrograman-framework","text":"Anda juga harus tahu bahasa pemrograman apa yang ingin Anda pakai saat menggunakan CSS framework. Sesuai penjelasan kami tadi, ada beberapa framework yang hanya menggunakan bahasa pemrograman standar seperti HTML. Di sisi lain, ada juga framework yang memakai bahasa pemrograman lebih kompleks seperti CSS dan JavaScripts. Tak jarang juga beberapa di antaranya memiliki dukungan SASS dan LESS untuk menyatukan setiap elemen UI. Intinya, sesuaikan dengan skill bahasa pemrograman Anda. Jika tidak, yang ada Anda akan kesusahan untuk menggunakan framework itu sendiri.","title":"Tentukan Bahasa Pemrograman Framework"},{"location":"framework/introduction/#pilih-css-framework-yang-menyediakan-berbagai-fitur","text":"Dari sekian fitur yang ditawarkan pada masing-masing framework, setidaknya pastikan framework tersebut memiliki fitur-fitur sebagai berikut: Desain yang responsif. Ini penting, karena ini akan menyangkut pada kenyamanan user saat mengunjungi website / aplikasi Anda. Mobile friendly. Pilih framework yang mampu menghasilkan kualitas website / aplikasi optimal di perangkat apa pun, khususnya mobile. Browser support. Gunakan framework yang bekerja secara responsif di segala browser.","title":"Pilih CSS Framework yang Menyediakan Berbagai Fitur"},{"location":"framework/introduction/#pastikan-framework-css-bisa-dikustomisasi","text":"Meskipun framework CSS fungsinya adalah untuk menghindari pembuatan kode dari nol, bukan berarti kode tersebut tidak bisa diubah atau dikustomisasi. Framework yang bisa dikustomisasi akan memberikan Anda ruang untuk berkreasi. Minimal, Anda bisa memiliki front-end yang sesuai dengan karakter brand Anda. Atau menghindari tampilan yang serupa dengan milik pengguna lain. Akan tetapi, jangan juga memilih framework yang mengharuskan Anda untuk melakukan banyak kustomisasi. Itu akan sama saja seperti Anda belajar coding dari awal. Source by tips_for_determining_a_framework","title":"Pastikan Framework CSS Bisa Dikustomisasi"},{"location":"framework/jenis2_framework/","text":"Jenis-jenis Framework Ada beragam jenis framework yang sering digunakan untuk membuat website. Setiap framework memiliki fungsinya masing-masing dan juga menggunakan bahasa pemrograman yang berbeda juga. Nah, berikut ini adalah jenis-jenis framework untuk membuat suatu website. Framework CSS CSS (Cascading Style Sheet) adalah bahasa pemrograman yang digunakan untuk mengatur layout dan tampilan pada HTML agar menjadi lebih menarik. Biasanya CSS ini dibuat oleh front-end developer. Berikut ini adalah beberapa contoh dari framework CSS. Bootstrap Framework ini memiliki tampilan yang modern, dinamis, dan juga lebih ramah pengguna. Fitur lain dari framework ini adalah website yang dibuat menggunakan bootstrap ini akan responsive jika dibuat dengan mengikuti aturan-aturan yang disediakan bootstrap. # Fitur unggulan Desain responsif. Menawarkan sistem grid yang powerful untuk desain responsif, cepat, dan mudah. Kaya akan fitur. Memiliki banyak fitur untuk kebutuhan front-end. Mulai dari layout, website template, tema, panel admin, dan banyak koleksi komponen user interface (UI). Ada juga aneka model desain untuk tombol, formulir, kartu, notifikasi yang semuanya bisa menghemat waktu tim desainer Anda. Cocok untuk pemula. Bootstrap sudah memfasilitasi Anda dengan banyak tutorial dan guideline yang mudah diikuti. Memiliki komunitas developer yang besar. Karena diciptakan oleh salah satu developer Twitter dan bersifat open-source, Bootstrap memiliki komunitas developer yang luas. Didukung dengan LESS dan SASS. Bootstrap menjadi salah satu framework CSS yang mendukung LESS dan SASS. Keduanya merupakan bahasa pra-prosesor yang memudahkan Anda untuk menulis kode CSS dengan rapi dan terstruktur. Flexbox. Model layout yang berguna untuk mengatur elemen suatu website atau aplikasi. Bertujuan agar Anda bisa mengatur panjang, lebar, dan posisi setiap elemen supaya tidak berhimpit satu dengan yang lainnya. Semantic UI Framework ini memiliki kelebihan dalam penulisan class yang lebih mudah dibandingkan framework lain. Selain itu ia juga menyediakan banyak komponen UI yang berguna untuk membuat tampilan HTML menjadi lebih menarik. # Fitur unggulan Penulisan class yang mudah. Karena menganut human-friendly HTML, Anda bisa mengembangkan penulisan dan mengingat setiap class secara mudah. Kaya akan variabel tema dan komponen UI. Semantic UI mempunyai ribuan pilihan variabel tema dan komponen UI yang responsif. Bahkan, secara default elemen mereka sudah terlihat sangat apik dibanding milik Bootstrap. Kode JavaScript yang intuitif. Kode sangat mudah dipahami sehingga tidak terlalu sulit untuk dikembangkan. Materialize CSS Framework ini dibuat dengan tujuan untuk mengembangkan desain yang memungkinkan pengguna merasakan pengalaman yang serupa saat menggunakan produk di semua platform. Materialize ini mengadaptasi Material Design yang dibuat dan dikembangkan oleh Google. # Fitur unggulan Banyak fitur built-in. Framework ini menawarkan ragam fitur bawaan yang dinamis, mudah digunakan, modern, flow text, parallax element, dan masih banyak lagi. Meminimalisir waktu coding. Saking banyaknya fitur unggul yang dibawakan oleh Materizalie, waktu coding Anda bisa jauh lebih singkat. Banyak plugin unggul. Materialize juga menawarkan banyak pilihan plugins untuk mengembangkan UI pada website atau aplikasi Anda. Panduan yang lengkap. Materialize CSS sudah menyediakan dokumentasi dan guidelines lengkap agar Anda lebih menguasai segala hal yang berkaitan dengan UI pada front-end. Kompatibel dan responsif di segala browser dan perangkat. Framework Javascript JavaScript merupakan bahasa pemrograman yang sering digunakan oleh para front end developer dalam pembuatan tampilan website menjadi lebih interaktif. JavaScript merupakan bahasa pemrograman yang berjalan pada sisi front end dan masuk ke dalam golongan bahasa pemrograman tingkat tinggi. Berikut ini merupakan beberapa framework JavaScript yang sering digunakan. AngularJS Framework AngularJS ini bersifat open source dan ia berjalan pada sisi client dengan menggunakan konsep MVC untuk membuat tampilan dari website menjadi lebih dinamis. # Bagian utama yang menjadi komponen penting ng-app \u2013 Arahan dan link dari AngularJS ke HTML. ng-model \u2013 Arahan data dari app AngularJS ke input kontrol HTML. ng-bind \u2013 Arahan data dari app AngularJS ke tag HTML. # Fitur-Fitur AngularJS Directives \u2013 Memudahkan dalam mengatur DOM JavaScript, sehingga bisa menghasilkan konten berformat HTML yang lebih dinamis. Hierarchical Injections \u2013 Memudahkan pengelolaan kode untuk pengujian dan penggunaan ulang Two-way Data Binding \u2013 Memudahkan sinkronisasi antara model dan view. Scope \u2013 Objek yang menampung data Model berisi Method atau perantara antara Controller dan View. Controller \u2013 Mengontrol data dan alur kerja pada program yang sedang dibangun, berisi kumpulan fungsi-fungsi JavaScript yang dibuat di AngularJS. Services \u2013 Objek yang dapat digunakan di sebuah aplikasi untuk membuat XMLHttpRequest. Filters \u2013 Menyortir item atau fungsi kode. Directives \u2013 Digunakan untuk membuat tag pada HTML. Template \u2013 Tampilan program dengan yang sedang dibuat berdasarkan Controller dan Model. Routing \u2013 Proses switching atau perpindahan tampilan. Model View Whatever \u2013 Pola desain MVC membagi proses kerja karena memiliki tanggung jawab masing-masing. Jadi, metode lebih dekat menjadi MVVM (Model-View-Viewmodel). Deep Linking \u2013 Mengizinkan developer untuk melakukan encode aplikasi dalam URL, mem-bookmark, dan me-restore kondisi terakhir pada URL. Dependency Injection \u2013 Developer dapat menulis komponen atau kode secara terpisah satu sama lain, sehingga memudahkan uji coba dan mengembangkan program. # Kelebihan AngularJS AngularJS dengan TypeScript memiliki konsep Object Oriented Programming atau berbasis objek, sehingga proses menjadi fleksibel dan jauh lebih mudah dikelola. Dapat digunakan untuk membangun program yang kompleks seperti, website berskala besar, native app, PWA yang berkinerja tinggi, hingga RIA (Rich Internet App). Pembagian kerja skema MVC (Model, View, Controller), dimana JavaScript sebagai kontrol dan HTML sebagai View. Sehingga, Setiap perubahan kode akan langsung terlihat. Komponen umum seperti card, toolbar, navbar, dan container, dapat dibangun sekali tapi dapat digunakan berulang kali. Jumlah dan struktur baris kode untuk membangun aplikasi sangat rapi. Memiliki komunitas pengguna yang luas. Dapat melakukan uji coba secara langsung. Kompatibel dengan semua browser, kecuali Explorer. Terdapat RxJs atau reactive JavaScript, sebuah tools yang dapat menampung segala ketidaksinkronan. Sehingga, kode dapat berjalan meskipun aplikasi masih melakukan permintaan ke server. Memungkinkan untuk mengelola Single Page Application dengan mudah. # Kekurangan AngularJS Aturan penulisan kode cukup rumit, sehingga agak sulit bagi pemula. Struktur aplikasi yang dihasilkan cenderung lebih rumit, sehingga bisa menurunkan kinerja aplikasi. Kurang SEO Friendly. Ukuran framework termasuk besar yaitu 566 KB. Memerlukan autentikasi dari server untuk menjaga keamanan aplikasi. JavaScript dan browser harus selalu terhubung, jika JavaScript ter-disable dengan web browser, maka kode yang sudah dibuat tidak dapat bekerja. Developer harus terbiasa dengan bahasa pemrograman TypeScript. ReactJS ReactJS adalah framework yang dikembangkan oleh Facebook. Ia sering digunakan untuk membuat UI untuk suatu website atau aplikasi mobile karena ReactJS ini dapat digunakan secara multi platform. ReactJS ini merupakan inti dari React Native yang dapat memungkinkan kamu untuk mengembangkan aplikasi mobile di dua sistem operasi secara bersamaan, yaitu Android dan iOS. # Fitur-Fitur React Virtual DOM \u2013 Digunakan untuk menyimpan berbagai perubahan kode. Libraries Integration \u2013 Dapat dihubungkan dan digunakan bersama dengan berbagai library berbasis JavaScript. JSX (JavaScript XML) \u2013 Ekstensi sintaks JavaScript untuk memudahkan modifikasi DOM dengan kode HTML. Declarative \u2013 Membuat UI yang interaktif, sehingga proses React Native (Perender khusus React) \u2013 Memungkinkan kode digunakan dalam dua aplikasi sekaligus, yaitu Android dan iOS hanya dengan satu block code. Flux \u2013 Arsitektur aplikasi yang mengontrol aliran data ke komponen melalui satu titik kontrol, yaitu operator. React Views \u2013 Untuk melihat hasil dari program yang sedang dibangun. # Kelebihan React Menggunakan DOM Virtual yang lebih cepat dari DOM biasa. DOM Virtual akan terupdate ketika melakukan penulisan kode karena dapat tersimpan ke memori. Komponen yang terstruktur dan sederhana. Menggunakan bahasa yang hampir mirip dengan HTML dan CSS. Menggunakan one-way data binding dan Flux, sehingga lebih mudah mengontrol kode dan dan men-debug. Debugging dapat dilakukan hanya pada komponen yang bermasalah. Dapat diuji coba dengan mudah. SEO Friendly. Memiliki komunitas yang besar. # Kekurangan React Lebih berfokus pada tampilan. Dokumentasi yang berubah-ubah karena sering adanya update. JSX lebih sulit dipelajari oleh pemula. Framework PHP PHP (Hypertext Preprocessor) adalah bahasa pemrograman yang digunakan untuk komunikasi dari sisi server. Berikut ini adalah beberapa framework PHP yang populer digunakan dalam pembuatan website. CodeIgniter CodeIgniter atau dapat disingkat menjadi CI merupakan framework dengan arsitektur yang khas, yaitu arsitektur MVC (Model, View, controller). Dengan begitu kamu dapat menulis kode dengan lebih terstruktur dan spesifik. # Keunggulan Utama Framework ringan dengan performa yang dapat diandalkan. Mudah dipahami dan digunakan berkat adanya informasi bantuan dan tutorial CodeIgniter. Membuat aplikasi yang mudah diskalakan dengan menggunakan arsitektur framework berbasis MVC. Laravel Laravel ini biasanya digunakan oleh para developer untuk mengembangkan website dengan kompleksitas yang tinggi. Ia memiliki library yang lengkap serta memilih sintaksis atau kode yang elegan, ringkas, dan rapi. # Keunggulan Utama Memiliki syntax yang mudah dipahami dan dipelajari. Fungsionalitas intinya dapat dikembangkan dengan menggunakan add-ons. Menyediakan fungsi bawaan untuk mengelola routing, manajemen user, caching, dan lain sebagainya. Terintegrasi dengan library dan platform pihak ketiga, seperti AWS. Menjalankan task secara asynchronously di background untuk meningkatkan performa. Symfony Symfony ini cocok digunakan untuk mengembangkan website dengan skala yang besar dan kompleks. Ia juga memakan sedikit memori jika dibandingkan dengan framework lainnya dan menghasilkan performa yang tinggi. # Keunggulan Utama Framework yang sangat fleksibel sehingga Anda dapat mengaktifkan masing-masing komponen. Menyediakan fungsionalitas testing bawaan. Memiliki informasi bantuan dan tutorial yang dapat diandalkan. Source by : type_of_framework , CSS_framework , Javascript_framework , PHP_framework","title":"Types of Frameworks"},{"location":"framework/jenis2_framework/#jenis-jenis-framework","text":"Ada beragam jenis framework yang sering digunakan untuk membuat website. Setiap framework memiliki fungsinya masing-masing dan juga menggunakan bahasa pemrograman yang berbeda juga. Nah, berikut ini adalah jenis-jenis framework untuk membuat suatu website.","title":"Jenis-jenis Framework"},{"location":"framework/jenis2_framework/#framework-css","text":"CSS (Cascading Style Sheet) adalah bahasa pemrograman yang digunakan untuk mengatur layout dan tampilan pada HTML agar menjadi lebih menarik. Biasanya CSS ini dibuat oleh front-end developer. Berikut ini adalah beberapa contoh dari framework CSS.","title":"Framework CSS"},{"location":"framework/jenis2_framework/#bootstrap","text":"Framework ini memiliki tampilan yang modern, dinamis, dan juga lebih ramah pengguna. Fitur lain dari framework ini adalah website yang dibuat menggunakan bootstrap ini akan responsive jika dibuat dengan mengikuti aturan-aturan yang disediakan bootstrap.","title":"Bootstrap"},{"location":"framework/jenis2_framework/#fitur-unggulan","text":"Desain responsif. Menawarkan sistem grid yang powerful untuk desain responsif, cepat, dan mudah. Kaya akan fitur. Memiliki banyak fitur untuk kebutuhan front-end. Mulai dari layout, website template, tema, panel admin, dan banyak koleksi komponen user interface (UI). Ada juga aneka model desain untuk tombol, formulir, kartu, notifikasi yang semuanya bisa menghemat waktu tim desainer Anda. Cocok untuk pemula. Bootstrap sudah memfasilitasi Anda dengan banyak tutorial dan guideline yang mudah diikuti. Memiliki komunitas developer yang besar. Karena diciptakan oleh salah satu developer Twitter dan bersifat open-source, Bootstrap memiliki komunitas developer yang luas. Didukung dengan LESS dan SASS. Bootstrap menjadi salah satu framework CSS yang mendukung LESS dan SASS. Keduanya merupakan bahasa pra-prosesor yang memudahkan Anda untuk menulis kode CSS dengan rapi dan terstruktur. Flexbox. Model layout yang berguna untuk mengatur elemen suatu website atau aplikasi. Bertujuan agar Anda bisa mengatur panjang, lebar, dan posisi setiap elemen supaya tidak berhimpit satu dengan yang lainnya.","title":"# Fitur unggulan"},{"location":"framework/jenis2_framework/#semantic-ui","text":"Framework ini memiliki kelebihan dalam penulisan class yang lebih mudah dibandingkan framework lain. Selain itu ia juga menyediakan banyak komponen UI yang berguna untuk membuat tampilan HTML menjadi lebih menarik.","title":"Semantic UI"},{"location":"framework/jenis2_framework/#fitur-unggulan_1","text":"Penulisan class yang mudah. Karena menganut human-friendly HTML, Anda bisa mengembangkan penulisan dan mengingat setiap class secara mudah. Kaya akan variabel tema dan komponen UI. Semantic UI mempunyai ribuan pilihan variabel tema dan komponen UI yang responsif. Bahkan, secara default elemen mereka sudah terlihat sangat apik dibanding milik Bootstrap. Kode JavaScript yang intuitif. Kode sangat mudah dipahami sehingga tidak terlalu sulit untuk dikembangkan.","title":"# Fitur unggulan"},{"location":"framework/jenis2_framework/#materialize-css","text":"Framework ini dibuat dengan tujuan untuk mengembangkan desain yang memungkinkan pengguna merasakan pengalaman yang serupa saat menggunakan produk di semua platform. Materialize ini mengadaptasi Material Design yang dibuat dan dikembangkan oleh Google.","title":"Materialize CSS"},{"location":"framework/jenis2_framework/#fitur-unggulan_2","text":"Banyak fitur built-in. Framework ini menawarkan ragam fitur bawaan yang dinamis, mudah digunakan, modern, flow text, parallax element, dan masih banyak lagi. Meminimalisir waktu coding. Saking banyaknya fitur unggul yang dibawakan oleh Materizalie, waktu coding Anda bisa jauh lebih singkat. Banyak plugin unggul. Materialize juga menawarkan banyak pilihan plugins untuk mengembangkan UI pada website atau aplikasi Anda. Panduan yang lengkap. Materialize CSS sudah menyediakan dokumentasi dan guidelines lengkap agar Anda lebih menguasai segala hal yang berkaitan dengan UI pada front-end. Kompatibel dan responsif di segala browser dan perangkat.","title":"# Fitur unggulan"},{"location":"framework/jenis2_framework/#framework-javascript","text":"JavaScript merupakan bahasa pemrograman yang sering digunakan oleh para front end developer dalam pembuatan tampilan website menjadi lebih interaktif. JavaScript merupakan bahasa pemrograman yang berjalan pada sisi front end dan masuk ke dalam golongan bahasa pemrograman tingkat tinggi. Berikut ini merupakan beberapa framework JavaScript yang sering digunakan.","title":"Framework Javascript"},{"location":"framework/jenis2_framework/#angularjs","text":"Framework AngularJS ini bersifat open source dan ia berjalan pada sisi client dengan menggunakan konsep MVC untuk membuat tampilan dari website menjadi lebih dinamis.","title":"AngularJS"},{"location":"framework/jenis2_framework/#bagian-utama-yang-menjadi-komponen-penting","text":"ng-app \u2013 Arahan dan link dari AngularJS ke HTML. ng-model \u2013 Arahan data dari app AngularJS ke input kontrol HTML. ng-bind \u2013 Arahan data dari app AngularJS ke tag HTML.","title":"# Bagian utama yang menjadi komponen penting"},{"location":"framework/jenis2_framework/#fitur-fitur-angularjs","text":"Directives \u2013 Memudahkan dalam mengatur DOM JavaScript, sehingga bisa menghasilkan konten berformat HTML yang lebih dinamis. Hierarchical Injections \u2013 Memudahkan pengelolaan kode untuk pengujian dan penggunaan ulang Two-way Data Binding \u2013 Memudahkan sinkronisasi antara model dan view. Scope \u2013 Objek yang menampung data Model berisi Method atau perantara antara Controller dan View. Controller \u2013 Mengontrol data dan alur kerja pada program yang sedang dibangun, berisi kumpulan fungsi-fungsi JavaScript yang dibuat di AngularJS. Services \u2013 Objek yang dapat digunakan di sebuah aplikasi untuk membuat XMLHttpRequest. Filters \u2013 Menyortir item atau fungsi kode. Directives \u2013 Digunakan untuk membuat tag pada HTML. Template \u2013 Tampilan program dengan yang sedang dibuat berdasarkan Controller dan Model. Routing \u2013 Proses switching atau perpindahan tampilan. Model View Whatever \u2013 Pola desain MVC membagi proses kerja karena memiliki tanggung jawab masing-masing. Jadi, metode lebih dekat menjadi MVVM (Model-View-Viewmodel). Deep Linking \u2013 Mengizinkan developer untuk melakukan encode aplikasi dalam URL, mem-bookmark, dan me-restore kondisi terakhir pada URL. Dependency Injection \u2013 Developer dapat menulis komponen atau kode secara terpisah satu sama lain, sehingga memudahkan uji coba dan mengembangkan program.","title":"# Fitur-Fitur AngularJS"},{"location":"framework/jenis2_framework/#kelebihan-angularjs","text":"AngularJS dengan TypeScript memiliki konsep Object Oriented Programming atau berbasis objek, sehingga proses menjadi fleksibel dan jauh lebih mudah dikelola. Dapat digunakan untuk membangun program yang kompleks seperti, website berskala besar, native app, PWA yang berkinerja tinggi, hingga RIA (Rich Internet App). Pembagian kerja skema MVC (Model, View, Controller), dimana JavaScript sebagai kontrol dan HTML sebagai View. Sehingga, Setiap perubahan kode akan langsung terlihat. Komponen umum seperti card, toolbar, navbar, dan container, dapat dibangun sekali tapi dapat digunakan berulang kali. Jumlah dan struktur baris kode untuk membangun aplikasi sangat rapi. Memiliki komunitas pengguna yang luas. Dapat melakukan uji coba secara langsung. Kompatibel dengan semua browser, kecuali Explorer. Terdapat RxJs atau reactive JavaScript, sebuah tools yang dapat menampung segala ketidaksinkronan. Sehingga, kode dapat berjalan meskipun aplikasi masih melakukan permintaan ke server. Memungkinkan untuk mengelola Single Page Application dengan mudah.","title":"# Kelebihan AngularJS"},{"location":"framework/jenis2_framework/#kekurangan-angularjs","text":"Aturan penulisan kode cukup rumit, sehingga agak sulit bagi pemula. Struktur aplikasi yang dihasilkan cenderung lebih rumit, sehingga bisa menurunkan kinerja aplikasi. Kurang SEO Friendly. Ukuran framework termasuk besar yaitu 566 KB. Memerlukan autentikasi dari server untuk menjaga keamanan aplikasi. JavaScript dan browser harus selalu terhubung, jika JavaScript ter-disable dengan web browser, maka kode yang sudah dibuat tidak dapat bekerja. Developer harus terbiasa dengan bahasa pemrograman TypeScript.","title":"# Kekurangan AngularJS"},{"location":"framework/jenis2_framework/#reactjs","text":"ReactJS adalah framework yang dikembangkan oleh Facebook. Ia sering digunakan untuk membuat UI untuk suatu website atau aplikasi mobile karena ReactJS ini dapat digunakan secara multi platform. ReactJS ini merupakan inti dari React Native yang dapat memungkinkan kamu untuk mengembangkan aplikasi mobile di dua sistem operasi secara bersamaan, yaitu Android dan iOS.","title":"ReactJS"},{"location":"framework/jenis2_framework/#fitur-fitur-react","text":"Virtual DOM \u2013 Digunakan untuk menyimpan berbagai perubahan kode. Libraries Integration \u2013 Dapat dihubungkan dan digunakan bersama dengan berbagai library berbasis JavaScript. JSX (JavaScript XML) \u2013 Ekstensi sintaks JavaScript untuk memudahkan modifikasi DOM dengan kode HTML. Declarative \u2013 Membuat UI yang interaktif, sehingga proses React Native (Perender khusus React) \u2013 Memungkinkan kode digunakan dalam dua aplikasi sekaligus, yaitu Android dan iOS hanya dengan satu block code. Flux \u2013 Arsitektur aplikasi yang mengontrol aliran data ke komponen melalui satu titik kontrol, yaitu operator. React Views \u2013 Untuk melihat hasil dari program yang sedang dibangun.","title":"# Fitur-Fitur React"},{"location":"framework/jenis2_framework/#kelebihan-react","text":"Menggunakan DOM Virtual yang lebih cepat dari DOM biasa. DOM Virtual akan terupdate ketika melakukan penulisan kode karena dapat tersimpan ke memori. Komponen yang terstruktur dan sederhana. Menggunakan bahasa yang hampir mirip dengan HTML dan CSS. Menggunakan one-way data binding dan Flux, sehingga lebih mudah mengontrol kode dan dan men-debug. Debugging dapat dilakukan hanya pada komponen yang bermasalah. Dapat diuji coba dengan mudah. SEO Friendly. Memiliki komunitas yang besar.","title":"# Kelebihan React"},{"location":"framework/jenis2_framework/#kekurangan-react","text":"Lebih berfokus pada tampilan. Dokumentasi yang berubah-ubah karena sering adanya update. JSX lebih sulit dipelajari oleh pemula.","title":"# Kekurangan React"},{"location":"framework/jenis2_framework/#framework-php","text":"PHP (Hypertext Preprocessor) adalah bahasa pemrograman yang digunakan untuk komunikasi dari sisi server. Berikut ini adalah beberapa framework PHP yang populer digunakan dalam pembuatan website.","title":"Framework PHP"},{"location":"framework/jenis2_framework/#codeigniter","text":"CodeIgniter atau dapat disingkat menjadi CI merupakan framework dengan arsitektur yang khas, yaitu arsitektur MVC (Model, View, controller). Dengan begitu kamu dapat menulis kode dengan lebih terstruktur dan spesifik.","title":"CodeIgniter"},{"location":"framework/jenis2_framework/#keunggulan-utama","text":"Framework ringan dengan performa yang dapat diandalkan. Mudah dipahami dan digunakan berkat adanya informasi bantuan dan tutorial CodeIgniter. Membuat aplikasi yang mudah diskalakan dengan menggunakan arsitektur framework berbasis MVC.","title":"# Keunggulan Utama"},{"location":"framework/jenis2_framework/#laravel","text":"Laravel ini biasanya digunakan oleh para developer untuk mengembangkan website dengan kompleksitas yang tinggi. Ia memiliki library yang lengkap serta memilih sintaksis atau kode yang elegan, ringkas, dan rapi.","title":"Laravel"},{"location":"framework/jenis2_framework/#keunggulan-utama_1","text":"Memiliki syntax yang mudah dipahami dan dipelajari. Fungsionalitas intinya dapat dikembangkan dengan menggunakan add-ons. Menyediakan fungsi bawaan untuk mengelola routing, manajemen user, caching, dan lain sebagainya. Terintegrasi dengan library dan platform pihak ketiga, seperti AWS. Menjalankan task secara asynchronously di background untuk meningkatkan performa.","title":"# Keunggulan Utama"},{"location":"framework/jenis2_framework/#symfony","text":"Symfony ini cocok digunakan untuk mengembangkan website dengan skala yang besar dan kompleks. Ia juga memakan sedikit memori jika dibandingkan dengan framework lainnya dan menghasilkan performa yang tinggi.","title":"Symfony"},{"location":"framework/jenis2_framework/#keunggulan-utama_2","text":"Framework yang sangat fleksibel sehingga Anda dapat mengaktifkan masing-masing komponen. Menyediakan fungsionalitas testing bawaan. Memiliki informasi bantuan dan tutorial yang dapat diandalkan. Source by : type_of_framework , CSS_framework , Javascript_framework , PHP_framework","title":"# Keunggulan Utama"},{"location":"html/html_introduction/","text":"HTML (Hypertext Markup Language) Contoh format dasar html code : <!DOCTYPE html> <html> <head> <title> Belajar HTML Dasar </title> </head> <body> <p> Hello World </p> </body> <html> Struktur Dasar HTML Deklarasi <!DOCTYPE html> yang menandakan bahwa HTML yang digunakan adalah versi 5. Tag <html> wajib ada dalam setiap dokumen HTML. Tanpa tag tersebut, file HTML tidak bisa di compile dan output nya tidak akan tampil di browser. dan Tag <html> ditutup dengan </html> . Head Head adalah kepala dari file HTML. Tag <head> dan diakhiri dengan tag </head> . Tag <title> untuk memberikan judul pada file HTML. Body Struktur <body> yang menjadi inti dari dokumen HTML. Berikut bagian-bagian yang biasanya terdapat dibagian <body> : Tag Tag merupakan penanda untuk awalan dan akhiran dari elemen HTML. Tag dibuat menggunakan kurung siku <>, di dalam kurung tersebut berisi nama tag. Beberapa tag juga memiliki atribut. Contoh tag yang sering dipakai antara lain <head> , <body> , <p> , dan masih banyak lagi. Elemen Elemen merupakan komponen penyusun. Elemen tersusun atas tag pembuka, isi dan penutup. Dalam beberapa kasus juga sering ditambahkan atribut. Contoh elemen <p align=\u201dcenter\u201d>Halo Dunia!<p> . Contoh di atas adalah satu elemen <p> yang memiliki atribut align=\u201dcenter\u201d. Sementara isinya berupa teks, yaitu Halo Dunia! Atribut Atribut merupakan kata khusus yang ditempatkan di dalam tag pembuka. Istilah lain untuk menyebut atribut adalah modifier karena fungsi mengubah perilaku elemen. Pada contoh di atas, atribut yang digunakan adalah align=\u201dcenter\u201d . Fungsinya yaitu mengubah agar tulisan Halo Dunia! ada di bagian tengah layar. For full explanation visit html_introduction_1 Kenapa HTML Itu Penting? Menguasai HTML secara fundamental sangatlah penting jika Anda ingin menjadi: Front End Developer: Sebagai seorang Front End Developer, Anda bertanggung jawab untuk merancang dan mengembangkan tampilan dan antarmuka pengguna pada sebuah situs web. HTML adalah bahasa dasar yang digunakan untuk membuat struktur dasar dari halaman web, termasuk teks, gambar, tautan, dan elemen-elemen lainnya. Memahami HTML dengan baik adalah kunci untuk menciptakan pengalaman pengguna yang baik. Web Developer: Sebagai seorang Web Developer, Anda perlu menguasai HTML untuk membangun seluruh situs web. Ini mencakup merancang halaman-halaman web, mengorganisasi konten, dan memastikan bahwa semua elemen bekerja dengan baik. HTML adalah fondasi dari semua situs web, dan pengetahuan yang kuat tentang bahasa ini akan membantu Anda menjadi seorang pengembang web yang kompeten. Full Stack Developer: Sebagai seorang Full Stack Developer, Anda bertanggung jawab atas pengembangan baik di sisi depan (Front End) maupun di sisi belakang (Back End) situs web. Meskipun pekerjaan Back End Developer lebih fokus pada server, basis data, dan logika bisnis, pemahaman HTML masih penting. Ini karena Anda perlu berinteraksi dengan Front End dalam beberapa kasus dan memahami cara data ditampilkan di halaman web. Source By html_introduction_2 Bahasa yang harus dikuasai Selain HTML, ada beberapa teknologi dan bahasa pemrograman lain yang sangat penting untuk dipelajari jika Anda ingin menjadi seorang pengembang web yang sukses. Berikut adalah beberapa di antaranya: CSS (Cascading Style Sheets): CSS digunakan untuk mengatur tampilan dan tata letak halaman web. Dengan CSS, Anda dapat mengendalikan warna, font, margin, padding, dan aspek visual lainnya dari elemen-elemen HTML. Ini adalah keterampilan kunci untuk Front End Development. JavaScript : JavaScript adalah bahasa pemrograman yang digunakan untuk menambahkan interaktivitas ke halaman web. Dengan JavaScript, Anda dapat membuat efek animasi, validasi formulir, dan bahkan membangun aplikasi web yang lebih kompleks. Ini adalah salah satu aspek utama dari Front End Development. Back-End Programming Languages : Jika Anda ingin menjadi Full Stack Developer, Anda perlu memahami bahasa pemrograman Back End seperti Python, Ruby, PHP, Node.js, atau Java. Bahasa ini digunakan untuk mengembangkan logika server, mengelola basis data, dan mengatur komunikasi dengan Front End. Basis Data : Pengetahuan tentang basis data sangat penting. Anda perlu memahami cara merancang dan mengelola basis data untuk menyimpan dan mengakses informasi di situs web Anda. Beberapa contoh teknologi basis data yang umum digunakan adalah MySQL, PostgreSQL, MongoDB, dan SQLite. Framework dan Library : Banyak pengembang web menggunakan framework dan library untuk mempercepat pengembangan. Contohnya, untuk Front End, Anda bisa mempelajari React, Angular, atau Vue.js. Di sisi Back End, ada banyak framework seperti Express.js (Node.js), Ruby on Rails, Django (Python), dan Laravel (PHP). HTTP/HTTPS dan Protokol Web : Memahami cara web berfungsi dan bagaimana HTTP/HTTPS berinteraksi dengan situs web adalah penting. Anda perlu tahu tentang metode HTTP, status kode, dan aspek keamanan di web. Version Control (Contohnya, Git) : Pengetahuan tentang sistem kontrol versi seperti Git sangat berguna. Ini memungkinkan Anda untuk mengelola kode Anda, berkolaborasi dengan tim, dan mengikuti perubahan. Keamanan Web : Memahami praktik keamanan web seperti perlindungan terhadap serangan XSS, SQL injection, dan praktik keamanan lainnya sangat penting untuk menjaga situs web Anda aman. Server dan Hosting : Anda perlu memahami cara meng-host situs web Anda, konfigurasi server, manajemen DNS, dan aspek hosting lainnya. Pemahaman tentang Peramban Web : Memahami cara berbagai peramban web berperilaku dan bagaimana memastikan situs Anda kompatibel dengan berbagai peramban adalah keterampilan yang berguna. Prinsip Desain Responsif : Memahami cara merancang situs web yang responsif untuk berbagai perangkat dan layar adalah penting dalam dunia web yang semakin beragam. Pengoptimalan Kinerja dan SEO : Belajar cara mengoptimalkan situs web Anda untuk kinerja yang baik dan praktik SEO akan membantu situs Anda mendapatkan lalu lintas dan berkinerja baik di mesin pencari. Source By html_introduction_3","title":"Introduction"},{"location":"html/html_introduction/#html-hypertext-markup-language","text":"Contoh format dasar html code : <!DOCTYPE html> <html> <head> <title> Belajar HTML Dasar </title> </head> <body> <p> Hello World </p> </body> <html>","title":"HTML (Hypertext Markup Language)"},{"location":"html/html_introduction/#struktur-dasar-html","text":"","title":"Struktur Dasar HTML"},{"location":"html/html_introduction/#deklarasi","text":"<!DOCTYPE html> yang menandakan bahwa HTML yang digunakan adalah versi 5. Tag <html> wajib ada dalam setiap dokumen HTML. Tanpa tag tersebut, file HTML tidak bisa di compile dan output nya tidak akan tampil di browser. dan Tag <html> ditutup dengan </html> .","title":"Deklarasi"},{"location":"html/html_introduction/#head","text":"Head adalah kepala dari file HTML. Tag <head> dan diakhiri dengan tag </head> . Tag <title> untuk memberikan judul pada file HTML.","title":"Head"},{"location":"html/html_introduction/#body","text":"Struktur <body> yang menjadi inti dari dokumen HTML. Berikut bagian-bagian yang biasanya terdapat dibagian <body> :","title":"Body"},{"location":"html/html_introduction/#tag","text":"Tag merupakan penanda untuk awalan dan akhiran dari elemen HTML. Tag dibuat menggunakan kurung siku <>, di dalam kurung tersebut berisi nama tag. Beberapa tag juga memiliki atribut. Contoh tag yang sering dipakai antara lain <head> , <body> , <p> , dan masih banyak lagi.","title":"Tag"},{"location":"html/html_introduction/#elemen","text":"Elemen merupakan komponen penyusun. Elemen tersusun atas tag pembuka, isi dan penutup. Dalam beberapa kasus juga sering ditambahkan atribut. Contoh elemen <p align=\u201dcenter\u201d>Halo Dunia!<p> . Contoh di atas adalah satu elemen <p> yang memiliki atribut align=\u201dcenter\u201d. Sementara isinya berupa teks, yaitu Halo Dunia!","title":"Elemen"},{"location":"html/html_introduction/#atribut","text":"Atribut merupakan kata khusus yang ditempatkan di dalam tag pembuka. Istilah lain untuk menyebut atribut adalah modifier karena fungsi mengubah perilaku elemen. Pada contoh di atas, atribut yang digunakan adalah align=\u201dcenter\u201d . Fungsinya yaitu mengubah agar tulisan Halo Dunia! ada di bagian tengah layar. For full explanation visit html_introduction_1","title":"Atribut"},{"location":"html/html_introduction/#kenapa-html-itu-penting","text":"Menguasai HTML secara fundamental sangatlah penting jika Anda ingin menjadi: Front End Developer: Sebagai seorang Front End Developer, Anda bertanggung jawab untuk merancang dan mengembangkan tampilan dan antarmuka pengguna pada sebuah situs web. HTML adalah bahasa dasar yang digunakan untuk membuat struktur dasar dari halaman web, termasuk teks, gambar, tautan, dan elemen-elemen lainnya. Memahami HTML dengan baik adalah kunci untuk menciptakan pengalaman pengguna yang baik. Web Developer: Sebagai seorang Web Developer, Anda perlu menguasai HTML untuk membangun seluruh situs web. Ini mencakup merancang halaman-halaman web, mengorganisasi konten, dan memastikan bahwa semua elemen bekerja dengan baik. HTML adalah fondasi dari semua situs web, dan pengetahuan yang kuat tentang bahasa ini akan membantu Anda menjadi seorang pengembang web yang kompeten. Full Stack Developer: Sebagai seorang Full Stack Developer, Anda bertanggung jawab atas pengembangan baik di sisi depan (Front End) maupun di sisi belakang (Back End) situs web. Meskipun pekerjaan Back End Developer lebih fokus pada server, basis data, dan logika bisnis, pemahaman HTML masih penting. Ini karena Anda perlu berinteraksi dengan Front End dalam beberapa kasus dan memahami cara data ditampilkan di halaman web. Source By html_introduction_2","title":"Kenapa HTML Itu Penting?"},{"location":"html/html_introduction/#bahasa-yang-harus-dikuasai","text":"Selain HTML, ada beberapa teknologi dan bahasa pemrograman lain yang sangat penting untuk dipelajari jika Anda ingin menjadi seorang pengembang web yang sukses. Berikut adalah beberapa di antaranya: CSS (Cascading Style Sheets): CSS digunakan untuk mengatur tampilan dan tata letak halaman web. Dengan CSS, Anda dapat mengendalikan warna, font, margin, padding, dan aspek visual lainnya dari elemen-elemen HTML. Ini adalah keterampilan kunci untuk Front End Development. JavaScript : JavaScript adalah bahasa pemrograman yang digunakan untuk menambahkan interaktivitas ke halaman web. Dengan JavaScript, Anda dapat membuat efek animasi, validasi formulir, dan bahkan membangun aplikasi web yang lebih kompleks. Ini adalah salah satu aspek utama dari Front End Development. Back-End Programming Languages : Jika Anda ingin menjadi Full Stack Developer, Anda perlu memahami bahasa pemrograman Back End seperti Python, Ruby, PHP, Node.js, atau Java. Bahasa ini digunakan untuk mengembangkan logika server, mengelola basis data, dan mengatur komunikasi dengan Front End. Basis Data : Pengetahuan tentang basis data sangat penting. Anda perlu memahami cara merancang dan mengelola basis data untuk menyimpan dan mengakses informasi di situs web Anda. Beberapa contoh teknologi basis data yang umum digunakan adalah MySQL, PostgreSQL, MongoDB, dan SQLite. Framework dan Library : Banyak pengembang web menggunakan framework dan library untuk mempercepat pengembangan. Contohnya, untuk Front End, Anda bisa mempelajari React, Angular, atau Vue.js. Di sisi Back End, ada banyak framework seperti Express.js (Node.js), Ruby on Rails, Django (Python), dan Laravel (PHP). HTTP/HTTPS dan Protokol Web : Memahami cara web berfungsi dan bagaimana HTTP/HTTPS berinteraksi dengan situs web adalah penting. Anda perlu tahu tentang metode HTTP, status kode, dan aspek keamanan di web. Version Control (Contohnya, Git) : Pengetahuan tentang sistem kontrol versi seperti Git sangat berguna. Ini memungkinkan Anda untuk mengelola kode Anda, berkolaborasi dengan tim, dan mengikuti perubahan. Keamanan Web : Memahami praktik keamanan web seperti perlindungan terhadap serangan XSS, SQL injection, dan praktik keamanan lainnya sangat penting untuk menjaga situs web Anda aman. Server dan Hosting : Anda perlu memahami cara meng-host situs web Anda, konfigurasi server, manajemen DNS, dan aspek hosting lainnya. Pemahaman tentang Peramban Web : Memahami cara berbagai peramban web berperilaku dan bagaimana memastikan situs Anda kompatibel dengan berbagai peramban adalah keterampilan yang berguna. Prinsip Desain Responsif : Memahami cara merancang situs web yang responsif untuk berbagai perangkat dan layar adalah penting dalam dunia web yang semakin beragam. Pengoptimalan Kinerja dan SEO : Belajar cara mengoptimalkan situs web Anda untuk kinerja yang baik dan praktik SEO akan membantu situs Anda mendapatkan lalu lintas dan berkinerja baik di mesin pencari. Source By html_introduction_3","title":"Bahasa yang harus dikuasai"},{"location":"html/html_structure/","text":"Berikut tag yang biasa digunakan pada html : Tag Dasar HTML yang Termasuk ke dalam Fundamental No Nama Tag Fungsi 1 <!DOCTYPE html> Deklarasi untuk mendefinisikan dokumen menjadi HTML 2 <html> Tag pembuka untuk membuat dokumen HTML 3 <head> Informasi meta tentang dokumen 4 <title> Membuat judul halaman yang nantinya akan ditampilkan di browser 5 <body> Tempat dibuatnya semua konten website menggunakan HTML Tag HTML Membuat Judul No Nama Tag Fungsi 1 <h1> s/d <h6> Deklarasi untuk mendefinisikan dokumen menjadi HTML 2 <hr> Memisahkan konten (biasanya ditampilkan garis pembatas) Tag HTML untuk Membuat Paragraf No Nama Tag Fungsi 1 <p> Membuat paragraf 2 br> Membuat garis baru 3 <pre> Memformat teks atau kalimat Tag Style No Nama Tag Fungsi 1 style Atribut untuk elemen styling pada HTML 2 background-color Memberikan warna latar belakang 3 color Memberi warna pada teks 4 font-family Mengubah font pada teks 5 font-size Mengatur ukuran font 6 text-align Mengatur perataan teks Tag Formating No Nama Tag Fungsi 1 <b> Membuat teks tebal 2 <strong> Membuat teks penting 3 <i> Membuat teks miring 4 <em> Membuat teks ditekankan 5 <mark> Membuat teks ditandai 6 <small> Membuat teks kecil 7 <del> Teks dihapus 8 <ins> Teks dimasukan 9 <sub> Teks subscript 10 <sup> Teks superscript Tag Gambar No Nama Tag Fungsi 1 <img> Elemen untuk mendefinisikan gambar 2 src Atribut untuk menentukan URL gambar 3 alt Mendefinisikan teks pada gambar, jika gambar tidak dapat ditampilkan 4 width \u2013 height Menentukan ukuran gambar 5 float Properti untuk float image pada CSS 6 <map> Mendefinisikan gambar peta 7 <area> Mendefinisikan area atau daerah-daerah gambar pada peta 8 <picture> Menampilkan gambar yang berbeda untuk perangkat yang berbeda Tag Form No Nama Tag Fungsi 1 <form> Membuat formulir untuk mengumpulkan input pengguna 2 <input> Membuat tipe inputan pada form yang akan dibuat 3 <textare> Elemen untuk mendefinisikan field input 4 <label> Memberikan label pada elemen input 5 <fieldset> Mengelompokan elemen yang terdapat pada sebuah form 6 <select> Membuat input dengan pilihan yang berbentuk list drop down 7 <optgroup> Mengelompokan beberapa pilihan pada daftar pilihan input 8 <option> Mendefinisikan opsi yang bisa dipilih 9 <button> Membuat Button 10 <datalist> Membuat daftar pilihan untuk input data 11 <output> Menampilkan hasil dari hitungan Tag Tabel No Nama Tag Fungsi 1 <table> Membuat tabel pada web 2 <tr> Membuat baris pada tabel 3 <td> Membuat kolom pada tabel 4 <th> Membuat judul pada kolom. Contohnya nama, kelas, dan alamat. 5 <caption> Membuat judul tabel 6 border Mengatur garis tabel 7 border-collapse Mengatur batas garis tabel 8 padding Mengatur padding pada cell 9 text-align Mengatur perataan pada konten tabel 10 border-spacing Mengatur jarak spasi garis tabel 11 colspan Menggabungkan beberapa kolom. Kalau di office disebutnya Merge Cell 12 rowspan Menggabungkan beberapa baris 13 id Memberikan id pada tabel atau kolom Tag Daftar / List No Nama Tag Fungsi 1 <ul> Untuk membuat tampilan daftar menggunakan simbol seperti bullet, cyrcle, dan lainnya. 2 <ol> Membuat daftar menggunakan nomor, huruf, romawi, dan lainnya 3 <li> Menentukan berbagai item yang ingin ditampilkan 4 <dl> Mendefinisikan daftar deskripsi 5 <dt> Mendefinisikan istilah deskripsi 6 <dd> Menggambarkan istilah dalam daftar deskripsi 7 <type> Menentukan jenis penomoran For full explanation visit html_structure_1","title":"Tags in HTML"},{"location":"html/html_structure/#tag-dasar-html-yang-termasuk-ke-dalam-fundamental","text":"No Nama Tag Fungsi 1 <!DOCTYPE html> Deklarasi untuk mendefinisikan dokumen menjadi HTML 2 <html> Tag pembuka untuk membuat dokumen HTML 3 <head> Informasi meta tentang dokumen 4 <title> Membuat judul halaman yang nantinya akan ditampilkan di browser 5 <body> Tempat dibuatnya semua konten website menggunakan HTML","title":"Tag Dasar HTML yang Termasuk ke dalam Fundamental"},{"location":"html/html_structure/#tag-html-membuat-judul","text":"No Nama Tag Fungsi 1 <h1> s/d <h6> Deklarasi untuk mendefinisikan dokumen menjadi HTML 2 <hr> Memisahkan konten (biasanya ditampilkan garis pembatas)","title":"Tag HTML Membuat Judul"},{"location":"html/html_structure/#tag-html-untuk-membuat-paragraf","text":"No Nama Tag Fungsi 1 <p> Membuat paragraf 2 br> Membuat garis baru 3 <pre> Memformat teks atau kalimat","title":"Tag HTML untuk Membuat Paragraf"},{"location":"html/html_structure/#tag-style","text":"No Nama Tag Fungsi 1 style Atribut untuk elemen styling pada HTML 2 background-color Memberikan warna latar belakang 3 color Memberi warna pada teks 4 font-family Mengubah font pada teks 5 font-size Mengatur ukuran font 6 text-align Mengatur perataan teks","title":"Tag Style"},{"location":"html/html_structure/#tag-formating","text":"No Nama Tag Fungsi 1 <b> Membuat teks tebal 2 <strong> Membuat teks penting 3 <i> Membuat teks miring 4 <em> Membuat teks ditekankan 5 <mark> Membuat teks ditandai 6 <small> Membuat teks kecil 7 <del> Teks dihapus 8 <ins> Teks dimasukan 9 <sub> Teks subscript 10 <sup> Teks superscript","title":"Tag Formating"},{"location":"html/html_structure/#tag-gambar","text":"No Nama Tag Fungsi 1 <img> Elemen untuk mendefinisikan gambar 2 src Atribut untuk menentukan URL gambar 3 alt Mendefinisikan teks pada gambar, jika gambar tidak dapat ditampilkan 4 width \u2013 height Menentukan ukuran gambar 5 float Properti untuk float image pada CSS 6 <map> Mendefinisikan gambar peta 7 <area> Mendefinisikan area atau daerah-daerah gambar pada peta 8 <picture> Menampilkan gambar yang berbeda untuk perangkat yang berbeda","title":"Tag Gambar"},{"location":"html/html_structure/#tag-form","text":"No Nama Tag Fungsi 1 <form> Membuat formulir untuk mengumpulkan input pengguna 2 <input> Membuat tipe inputan pada form yang akan dibuat 3 <textare> Elemen untuk mendefinisikan field input 4 <label> Memberikan label pada elemen input 5 <fieldset> Mengelompokan elemen yang terdapat pada sebuah form 6 <select> Membuat input dengan pilihan yang berbentuk list drop down 7 <optgroup> Mengelompokan beberapa pilihan pada daftar pilihan input 8 <option> Mendefinisikan opsi yang bisa dipilih 9 <button> Membuat Button 10 <datalist> Membuat daftar pilihan untuk input data 11 <output> Menampilkan hasil dari hitungan","title":"Tag Form"},{"location":"html/html_structure/#tag-tabel","text":"No Nama Tag Fungsi 1 <table> Membuat tabel pada web 2 <tr> Membuat baris pada tabel 3 <td> Membuat kolom pada tabel 4 <th> Membuat judul pada kolom. Contohnya nama, kelas, dan alamat. 5 <caption> Membuat judul tabel 6 border Mengatur garis tabel 7 border-collapse Mengatur batas garis tabel 8 padding Mengatur padding pada cell 9 text-align Mengatur perataan pada konten tabel 10 border-spacing Mengatur jarak spasi garis tabel 11 colspan Menggabungkan beberapa kolom. Kalau di office disebutnya Merge Cell 12 rowspan Menggabungkan beberapa baris 13 id Memberikan id pada tabel atau kolom","title":"Tag Tabel"},{"location":"html/html_structure/#tag-daftar-list","text":"No Nama Tag Fungsi 1 <ul> Untuk membuat tampilan daftar menggunakan simbol seperti bullet, cyrcle, dan lainnya. 2 <ol> Membuat daftar menggunakan nomor, huruf, romawi, dan lainnya 3 <li> Menentukan berbagai item yang ingin ditampilkan 4 <dl> Mendefinisikan daftar deskripsi 5 <dt> Mendefinisikan istilah deskripsi 6 <dd> Menggambarkan istilah dalam daftar deskripsi 7 <type> Menentukan jenis penomoran For full explanation visit html_structure_1","title":"Tag Daftar / List"}]}